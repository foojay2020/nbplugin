/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020 Gerrit Grunwald.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Build, upload to bintray and publish to maven central
 * gradle clean build bintrayUpload bintrayPublish
 */

plugins {
    id 'application'
    id 'idea'
    id 'java-library'
    id 'org.kordamp.gradle.java-project'
}

if (!project.hasProperty('bintrayUsername'))  ext.bintrayUsername  = '**undefined**'
if (!project.hasProperty('bintrayApiKey'))    ext.bintrayApiKey    = '**undefined**'
if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = '**undefined**'
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = '**undefined**'

config {
    release = (rootProject.findProperty('release') ?: false).toBoolean()

    info {
        name          = 'NBPlugin'
        description   = 'NBPlugin is a template for a NetBeans plugin to access the foojay discovery api service'
        vendor        = 'Hansolo'
        inceptionYear = '2020'
        tags          = ['java', 'swing']

        links {
            website      = 'https://github.com/HanSolo/nbplugin/wiki'
            issueTracker = 'https://github.com/HanSolo/nbplugin/issues'
            scm          = 'https://github.com/HanSolo/nbplugin.git'
        }

        people {
            person {
                id    = 'HanSolo'
                name  = 'Gerrit Grunwald'
                url   = 'https://harmoniccode.blogspot.com/'
                roles = ['developer']
            }
        }

        credentials {
            sonatype {
                username = project.sonatypeUsername
                password = project.sonatypePassword
            }
        }

        repositories {
            repository {
                name = 'localRelease'
                url  = "${project.rootProject.buildDir}/repos/local/release"
            }
            repository {
                name = 'localSnapshot'
                url  = "${project.rootProject.buildDir}/repos/local/snapshot"
            }
        }
    }

    licensing {
        licenses {
            license {
                id = 'Apache-2.0'
            }
        }
    }

    bintray {
        enabled      = true
        userOrg      = 'hansolo'
        repo         = 'nbplugin'
        name         = rootProject.name
        publish      = config.release
        credentials {
            username = project.bintrayUsername
            password = project.bintrayApiKey
        }
    }

    publishing {
        signing             = false
        releasesRepository  = 'localRelease'
        snapshotsRepository = 'localSnapshot'
    }

    docs {
        javadoc {
            autoLinks {
                enabled = false
            }
        }
    }
}

normalization {
    runtimeClasspath {
        ignore('/META-INF/MANIFEST.MF')
    }
}

repositories {
    jcenter()
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation('io.foojay.api:discoclient:1.0')
    implementation('org.slf4j:slf4j-api:1.7.25')
    implementation('org.apache.logging.log4j:log4j-api:2.13.3')
    implementation('org.apache.logging.log4j:log4j-core:2.13.3')
    implementation('org.apache.logging.log4j:log4j-slf4j-impl:2.13.3')
    implementation('com.google.code.gson:gson:2.8.6')
}

jar {
    manifest {
        attributes(
                'Bundle-Name': project.name,
                'Bundle-License': 'https://www.apache.org/licenses/LICENSE-2.0;description=Apache License Version 2.0;link=https://spdx.org/licenses/Apache-2.0.html',
                'Bundle-Description': config.info.description,
                'Bundle-SymbolicName': 'io.foojay.api.nbplugin',
                'Export-Package': 'io.foojay.api.nbplugin'
        )
    }
}


// start the app from gradle
task Demo(type: JavaExec) {
    main = "io.foojay.api.nbplugin.Main"
    classpath = sourceSets.main.runtimeClasspath
}
